import com.hi.dhl.plugin.*

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        applicationId "com.jal.todo"
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation Depend.junit
    androidTestImplementation Depend.androidTestJunit
    androidTestImplementation Depend.espressoCore

    implementation Kt.stdlibJdk8
    implementation AndroidX.coreKtx
    implementation AndroidX.appcompat
    implementation AndroidX.constraintlayout
    implementation AndroidX.pagingRuntime
    implementation AndroidX.swiperefreshlayout
    implementation AndroidX.appStartup
    implementation AndroidX.cardview
    implementation AndroidX.navigationfragment
    implementation AndroidX.navigationui
    implementation Android.meteria
    implementation AndroidX.recyclerview

    implementation Fragment.runtimeKtx

    implementation Retrofit.runtime
    implementation Retrofit.gson
    implementation Retrofit.logging

    implementation Coil.runtime

    implementation Hilt.daggerRuntime
    kapt Hilt.daggerCompiler
    implementation Hilt.viewModule
    kapt Hilt.compiler
}